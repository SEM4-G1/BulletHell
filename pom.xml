<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>dk.sdu.group.one</groupId>
    <artifactId>bullethell.jpms</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>BulletHell</name>
    <repositories>
    </repositories>
    <modules>
        <module>Core</module>
        <module>Common</module>
        <module>Player</module>
        <module>Weapon</module>
        <module>Bullet</module>
        <module>Map</module>
        <module>Obstacle</module>
        <module>AI</module>
        <module>Enemy</module>
        <module>Collision</module>
        <module>keyboard-controller</module>
        <module>Logging</module>
        <module>HealthPickUp</module>
    </modules>
    <properties>
        <java>java</java>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>16</maven.compiler.source>
        <maven.compiler.target>16</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>dk.sdu.mmmi.cbse</groupId>
            <artifactId>shadedlibgdx</artifactId>
            <version>1.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.9.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>1.8.2</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <!-- execute the resulting project -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${java}</executable>
                    <workingDirectory>.</workingDirectory>
                    <longModulepath>false</longModulepath>
                    <!-- if os is Mac include argument -XstartOnFirstThread, if not don't include it-->
                    <arguments>
                        <argument>-Dorg.lwjgl.util.Debug=true</argument>
                        <argument>-Djava.library.path=libs</argument>
                        <argument>--module-path=mods-mvn${path.separator}${settings.localRepository}/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar${path.separator}${settings.localRepository}/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar</argument>
                        <argument>--class-path=libs/*</argument>
<!--                        <argument>-XstartOnFirstThread</argument>-->

                        <!--<argument>-XstartOnFirstThread</argument>-->
                        <!-- because spark.core is an automatic module and actually required,
                        monitor.observer.zero would be resolved as well and does not need
                        to be added explicitly;
                        I still wanted to do it for clarity, but for some reason that results
                        in "java.lang.module.FindException: Module monitor.observer.zero not found";
                        strange... -->
                        <!--<argument>&#45;&#45;add-modules=monitor.observer.zero</argument>-->
                        <argument>--module=Core/dk.sdu.group.one.Main</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.0</version>
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.junit.platform</groupId>-->
<!--                        <artifactId>junit-platform-surefire-provider</artifactId>-->
<!--                        <version>1.2.0</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--                <configuration>-->
<!--                    <additionalClasspathElements>-->
<!--                        <additionalClasspathElement>src/test/java/</additionalClasspathElement>-->
<!--                    </additionalClasspathElements>-->
<!--                </configuration>-->
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>MacOS</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <!-- Add macOS specific argument -->
                            <arguments combine.children="append">
                                <argument>-XstartOnFirstThread</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- parent project should delete 'mods-mvn' -->
            <id>parent-project</id>
            <activation>
                <file>
                    <missing>src</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.2.0</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>mods-mvn</directory>
                                </fileset>
                                <fileset>
                                    <directory>libs</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- child projects should copy artifact into 'mods-mvn' -->
            <id>child-project</id>
            <activation>
                <file>
                    <exists>src</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.0.2</version>
                        <executions>
                            <execution>
                                <id>copy-installed</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>../mods-mvn</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>